
from typing import Awaitable
"""SPIKE motor_pair module."""

PAIR_1: int
PAIR_2: int
PAIR_3: int
PAIR_4: int

def pair(pair: int, left_motor: int, right_motor: int) -> None:
    """Bind two motor ports (*left_motor*, *right_motor*) to pair id *pair*.""" ...
def move(pair: int, steering: int, *, velocity: int = 360, acceleration: int = 1000) -> None:
    """Drive with *steering* (-100..100) at *velocity* (deg/sec).""" ...
def move_for_degrees(pair: int, steering: int, degrees: int, *, velocity: int = 360, stop: int = ..., acceleration: int = 1000, deceleration: int = 1000) -> Awaitable[int]:
    """Move for *degrees* with *steering* at *velocity*. Returns when motion completes.""" ...
def move_for_time(pair: int, steering: int, duration: int, *, velocity: int = 360, stop: int = ..., acceleration: int = 1000, deceleration: int = 1000) -> Awaitable[int]:
    """Move for *duration* ms with *steering* at *velocity*. Returns when motion completes.""" ...
def move_tank(pair: int, left_velocity: int, right_velocity: int, *, acceleration: int = 1000) -> None:
    """Tank drive at independent *left_velocity*/*right_velocity* (deg/sec).""" ...
def move_tank_for_degrees(pair: int, degrees: int, left_velocity: int, right_velocity: int, *, stop: int = ..., acceleration: int = 1000, deceleration: int = 1000) -> Awaitable[int]:
    """Tank move for *degrees* at given left/right velocities. Returns when motion completes.""" ...
def move_tank_for_time(pair: int, duration: int, left_velocity: int, right_velocity: int, *, stop: int = ..., acceleration: int = 1000, deceleration: int = 1000) -> Awaitable[int]:
    """Tank move for *duration* ms at given left/right velocities. Returns when motion completes.""" ...
def stop(pair: int, *, stop: int = ...) -> None:
    """Stop the motor pair identified by *pair*.""" ...
