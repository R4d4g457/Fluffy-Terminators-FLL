
"""MicroPython time functions (subset)."""
def sleep(sec: float) -> None:
    """Sleep for *sec* seconds (may be fractional).""" ...
def sleep_ms(ms: int) -> None:
    """Sleep for *ms* milliseconds.""" ...
def ticks_ms() -> int:
    """Return an increasing millisecond counter with wrap-around semantics.""" ...
def ticks_us() -> int:
    """Return an increasing microsecond counter with wrap-around semantics.""" ...
def ticks_add(ticks: int, delta: int) -> int:
    """Return *ticks* + *delta* with wrap-around (use with ticks_diff).""" ...
def ticks_diff(a: int, b: int) -> int:
    """Return signed difference *a - b* accounting for wrap-around.""" ...
def time() -> int:
    """Return seconds since epoch (implementation-defined).""" ...
def localtime(secs: int = ...) -> tuple:
    """Convert seconds to time tuple (year, month, mday, hour, minute, second, weekday, yearday).""" ...
def mktime(t: tuple) -> int:
    """Convert a time tuple to seconds since epoch (inverse of localtime).""" ...
