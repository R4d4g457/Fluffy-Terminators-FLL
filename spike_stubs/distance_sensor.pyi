
from typing import List, Tuple
"""Distance Sensor procedural API."""
def clear(port: int) -> None:
    """Clear the sensor's display/output state (if applicable).""" ...
def distance(port: int) -> int:
    """Return measured distance to the nearest object (often millimeters).""" ...
def get_pixel(port: int, x: int, y: int) -> int:
    """Return intensity value at matrix pixel (*x*, *y*) if supported by this sensor.""" ...
def set_pixel(port: int, x: int, y: int, intensity: int) -> None:
    """Set intensity at pixel (*x*, *y*) on the sensor's matrix (0..100).""" ...
def show(port: int, pixels: List[int]) -> None:
    """Show a 5x5 array of intensities on sensors that support matrix output.""" ...
# Back-compat helpers seen in community code (optional on some firmwares)
def ambient(port: int) -> int:
    """Return ambient light intensity measured by the sensor (unitless %).""" ...
def light(port: int) -> int:
    """Return reflected light intensity from the sensor's emitter (unitless %).""" ...
def presence(port: int) -> int:
    """Return 1 if an object is detected in front of the sensor, else 0.""" ...
